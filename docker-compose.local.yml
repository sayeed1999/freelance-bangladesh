services:
  # golang-api:
  #   build:
  #     context: ./freelance-bangladesh-api
  #     dockerfile: Dockerfile
  #   container_name: golang-api
  #   environment:
  #     - GIN_MODE=release                            # Set Gin to run in release mode
  #     # database specific envs
  #     - API_DATABASE_HOST=postgres-db
  #     - API_DATABASE_PORT=${API_DATABASE_PORT}
  #     - API_DATABASE_USER=${API_DATABASE_USER}
  #     - API_DATABASE_PASSWORD=${API_DATABASE_PASSWORD}
  #     - API_DATABASE_NAME=${API_DATABASE_NAME}
  #     # keycloak specific envs
  #     - API_KEYCLOAK_BASEURL=http://keycloak:8080
  #     - API_KEYCLOAK_REALM=freelance-bangladesh
  #     - API_KEYCLOAK_RESTAPI_CLIENTID=${API_KEYCLOAK_RESTAPI_CLIENTID}
  #     - API_KEYCLOAK_RESTAPI_CLIENTSECRET=${API_KEYCLOAK_RESTAPI_CLIENTSECRET}
  #   ports:
  #     - "5000:5000"
  #   restart: unless-stopped
  #   networks:
  #     - api_network
  #   depends_on:
  #     - postgres-db
  #     - keycloak-db

  # web-client:
  #   build:
  #     context: ./freelance-bangladesh-client
  #     dockerfile: Dockerfile
  #   container_name: web-client
  #   environment:
  #     - API_URL=http://golang-api:5000                                    # <golang_api_url>
  #     - NEXTAUTH_URL=http://localhost:3000                               # <exposed_web_client_url> #TODO: not sure working or not for keycloak
  #     - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
  #     - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
  #     - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
  #     - KEYCLOAK_ISSUER=http://keycloak:8080/realms/freelance-bangladesh  # <keycloak_address>/realms/<realm_name>
  #   ports:
  #     - "3000:3000"
  #   restart: unless-stopped
  #   networks:
  #     - api_network
  
  postgres-db:
    image: postgres:16.4
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${API_DATABASE_NAME}
      POSTGRES_USER: ${API_DATABASE_USER}
      POSTGRES_PASSWORD: ${API_DATABASE_PASSWORD}
    ports:
      - ${API_DATABASE_PORT}:5432
    volumes:
      - ~/data/postgresql/data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - api_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - 5434:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    volumes:
      - ~/data/pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - api_network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak
    environment:
      KC_HOSTNAME: localhost # Note: use server host name when deployed!!
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/${KEYCLOAK_DATABASE_NAME} # Note: keycloak-db is the address of the database
      KC_DB_USERNAME: ${KEYCLOAK_DATABASE_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}
    ports:
      - 8080:8080
    volumes:
      - ./keycloak/:/opt/keycloak/data/import
    restart: unless-stopped
    networks:
      - api_network
    depends_on:
      - keycloak-db
    command: -v start-dev --import-realm
  
  keycloak-db:
    image: postgres:16.4
    container_name: keycloak-db
    environment:
      POSTGRES_DB: ${KEYCLOAK_DATABASE_NAME}
      POSTGRES_USER: ${KEYCLOAK_DATABASE_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}
    volumes:
      - ~/data/keycloak-db/data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - api_network

  mail-server:
    image: mailhog/mailhog
    container_name: mail-server
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - api_network

networks:
  api_network:
    driver: bridge
